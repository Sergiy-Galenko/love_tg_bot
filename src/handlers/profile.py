from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from .constants import NAME, AGE, CITY, LOCATION, GENDER, HOBBY, PHOTO, SEARCH
from .utils import get_city_from_location, save_photo

async def set_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –≤—ñ–∫:")
    return AGE

async def set_age(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    try:
        context.user_data['age'] = int(update.message.text)
    except ValueError:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤—ñ–∫ —Ü–∏—Ñ—Ä–∞–º–∏:")
        return AGE
    await update.message.reply_text(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤–∞—à–∏–º –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è–º –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ –≤—Ä—É—á–Ω—É.",
        reply_markup=ReplyKeyboardMarkup(
            [
                [KeyboardButton("–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è–º", request_location=True)],
                ["–í–≤–µ—Å—Ç–∏ –º—ñ—Å—Ç–æ –≤—Ä—É—á–Ω—É"]
            ],
            resize_keyboard=True, one_time_keyboard=True
        )
    )
    return LOCATION

async def get_location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.location:
        location = update.message.location
        city = await get_city_from_location(location)
        if city:
            context.user_data['city'] = city
            await update.message.reply_text(
                f"–í–∞—à–µ –º—ñ—Å—Ç–æ: {city}.",
                reply_markup=ReplyKeyboardMarkup(
                    [
                        [f"–ó–∞–ª–∏—à–∏—Ç–∏ –º—ñ—Å—Ç–æ ({city})"],
                        ["–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É"]
                    ],
                    resize_keyboard=True, one_time_keyboard=True
                )
            )
            return CITY
        else:
            await update.message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à–µ –º—ñ—Å—Ç–æ. –í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –º—ñ—Å—Ç–æ –≤—Ä—É—á–Ω—É:")
            return CITY
    else:
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –º—ñ—Å—Ç–æ:")
        return CITY

async def set_city(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.text == "–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É":
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –º—ñ—Å—Ç–æ:")
        return CITY
    elif update.message.text.startswith("–ó–∞–ª–∏—à–∏—Ç–∏ –º—ñ—Å—Ç–æ ("):
        pass
    else:
        context.user_data['city'] = update.message.text
    await update.message.reply_text(
        "–í–∏–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç—å:",
        reply_markup=ReplyKeyboardMarkup(
            [
                ["–Ø —Ö–ª–æ–ø–µ—Ü—å üë¶", "–Ø –¥—ñ–≤—á–∏–Ω–∞ üëß"]
            ],
            resize_keyboard=True, one_time_keyboard=True
        )
    )
    return GENDER

async def set_gender(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['gender'] = update.message.text
    await update.message.reply_text(
        "–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ:",
        reply_markup=ReplyKeyboardMarkup(
            [
                ["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏"]
            ],
            resize_keyboard=True, one_time_keyboard=True
        )
    )
    return PHOTO

async def set_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.photo:
        photo_file = await update.message.photo[-1].get_file()
        photo_path = await save_photo(photo_file, update.message.from_user.id)  # await —Ç—É—Ç, –æ—Å–∫—ñ–ª—å–∫–∏ —Ç–µ–ø–µ—Ä –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ async
        context.user_data['photo'] = photo_path
        await update.message.reply_text("–í–∞—à–µ —Ñ–æ—Ç–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.")
    else:
        context.user_data['photo'] = None
    await update.message.reply_text("–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ —Å–µ–±–µ –∞–±–æ –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à—ñ —Ö–æ–±—ñ:")
    return HOBBY

async def set_hobby(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['hobby'] = update.message.text
    await update.message.reply_text(
        "–ö–æ–≥–æ –≤–∏ —Ö–æ—á–µ—Ç–µ —à—É–∫–∞—Ç–∏?",
        reply_markup=ReplyKeyboardMarkup(
            [
                ["–®—É–∫–∞—Ç–∏ —Ö–ª–æ–ø—Ü—è üë¶", "–®—É–∫–∞—Ç–∏ –¥—ñ–≤—á–∏–Ω—É üëß"],
                ["–®—É–∫–∞—Ç–∏ –≤—Å—ñ—Ö"]
            ],
            resize_keyboard=True, one_time_keyboard=True
        )
    )
    return SEARCH
