
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from .constants import START, MAIN_MENU_BUTTONS,NAME, PREMIUM, AGE_RANGE, ENTER_KEY
from .premium import premium_choice
from .utils import send_welcome_premium_message
from src.utils import get_currency

premium_keys = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
        reply_markup=ReplyKeyboardMarkup(
            MAIN_MENU_BUTTONS,
            resize_keyboard=True, one_time_keyboard=True
        )
    )
    return START

async def handle_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    choice = update.message.text
    user_id = update.message.from_user.id

    if choice == "18+":
        user_profile = context.user_data.get('profile')
        if user_profile and user_profile.get('premium', {}).get('status', False):
            await update.message.reply_text(
                "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é 18+:",
                reply_markup=ReplyKeyboardMarkup(
                    [
                        [update.message.from_user.first_name],
                        ["–í–≤–µ—Å—Ç–∏ —ñ–Ω—à–µ —ñ–º'—è"]
                    ],
                    resize_keyboard=True, one_time_keyboard=True
                )
            )
            return START  # –ó–º—ñ–Ω–∏—Ç–∏ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è ADULT_NAME
        else:
            await update.message.reply_text(
                "–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —Ü—å–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º-–∞–∫–∞—É–Ω—Ç.",
                reply_markup=ReplyKeyboardMarkup(
                    [
                        ["üî¥ –ö—É–ø–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º"],
                        ["–ù–∞–∑–∞–¥"]
                    ],
                    resize_keyboard=True
                )
            )
            return PREMIUM
    elif choice == "–ó–Ω–∞–π–æ–º—Å—Ç–≤–∞":
        await update.message.reply_text(
            "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:",
            reply_markup=ReplyKeyboardMarkup(
                [
                    [update.message.from_user.first_name],
                    ["–í–≤–µ—Å—Ç–∏ —ñ–Ω—à–µ —ñ–º'—è"]
                ],
                resize_keyboard=True, one_time_keyboard=True
            )
        )
        return NAME
    elif choice == "–í–≤–µ—Å—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á":
        await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á:")
        return ENTER_KEY

async def enter_key(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    key = update.message.text
    user_id = update.message.from_user.id

    if key in premium_keys:
        duration = premium_keys[key]['duration']
        if 'profile' not in context.user_data:
            context.user_data['profile'] = {'premium': {}}
        context.user_data['profile']['premium'] = {
            'status': True,
            'duration': duration
        }
        del premium_keys[key]
        await send_welcome_premium_message(update, duration)
        if duration == "–ù–∞ —Ä—ñ–∫":
            await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ –¥–ª—è –ø–æ—à—É–∫—É:")
            return AGE_RANGE
    else:
        await update.message.reply_text("–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –Ω–µ–≤—ñ—Ä–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    return START
